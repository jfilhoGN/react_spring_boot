import * as React from 'react';
import * as PropTypes from 'prop-types';
import { DialogCloseEvent } from './events';
/**
 * Represents the props of the [Kendo UI Dialog component for React]({% slug overview_dialog %}).
 */
export interface DialogProps {
    /**
     * Sets the title of the Dialog ([see example]({% slug title_dialog %})).
     * If `title` is not specified, the Dialog does not render a **Close** button.
     */
    title?: string | React.ReactElement<any>;
    /**
     * Specifies whether a close button should be rendered at the top corner of the dialog.
     */
    closeIcon?: boolean;
    /**
     * Specifies the width of the Dialog ([see example]({% slug dimensions_dialog %})).
     */
    width?: number | string;
    /**
     * Specifies the height of the Dialog ([see example]({% slug dimensions_dialog %})).
     */
    height?: number | string;
    /**
     * Specifies the minimum width of the Dialog.
     */
    minWidth?: number | string;
    /**
     * Fires when the **Close** button in the title is clicked or when the `Esc` button is pressed.
     */
    onClose?: (event: DialogCloseEvent) => void;
    /**
     * @hidden
     */
    children?: React.ReactNode;
    /**
     * Sets the `aria-labelledby` value.
     */
    id?: string;
}
export declare class Dialog extends React.Component<DialogProps> {
    /**
     * @hidden
     */
    static propTypes: {
        title: PropTypes.Requireable<any>;
        id: PropTypes.Requireable<any>;
        closeIcon: PropTypes.Requireable<any>;
        width: PropTypes.Requireable<any>;
        height: PropTypes.Requireable<any>;
        minWidth: PropTypes.Requireable<any>;
    };
    private titleId;
    /**
     * @hidden
     */
    render(): JSX.Element;
    private handleCloseDialog;
    private handleKeyDown;
    private getActionBar;
    private getContent;
    private generateTitleId;
}
